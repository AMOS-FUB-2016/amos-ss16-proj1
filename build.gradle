buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath "com.avast.gradle:docker-compose-gradle-plugin:0.3.8"
	}
}


plugins {
    id "war"
    id "eclipse-wtp"
    id "com.intershop.gradle.jaxb" version "1.0.1"
}

apply plugin: 'docker-compose'

configurations {
    xjc
}

repositories {
    jcenter()
}

dependencies {
	def jerseyVersion = "2.23.2"

    providedCompile "javax.servlet:javax.servlet-api:3.1.+"
    providedCompile group: 'javax.servlet.jsp', name: 'jsp-api', version: '2.2'
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    compile "org.hibernate:hibernate-core:5.2.2.Final"
    compile "net.sourceforge.stripes:stripes:1.6.+"
    runtime "org.postgresql:postgresql:9.4.1209"
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: jerseyVersion
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: jerseyVersion
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: jerseyVersion

	// jaxb dependencies
	compile group: 'org.jvnet.hyperjaxb3', name: 'hyperjaxb3-ejb-runtime', version: '0.6.1'
    xjc group: 'org.jvnet.hyperjaxb3', name: 'hyperjaxb3-ejb-plugin', version: '0.6.1'
}

jaxb {
    javaGen {
        //generates a 'project' schema file from existing java code
        osst {
            schema = file('xsd/Schnittstelle_OSST.xsd')
			binding = file('xsd/bindings.xjb')
            extension = true
            packageName="com.deutschebahn.osst.v1_0"
            args = ["-Xhyperjaxb3-jpa2", "-Xhyperjaxb3-jpa2-persistenceXml=xsd/persistence.xml"]
        }
    }
}

def hyperjaxb3MetaInfAdditions = 'build/generated/jaxb/java/osst'
war {
    classpath hyperjaxb3MetaInfAdditions
}

eclipse.wtp {
    component {
        contextPath = '/'
		
		// prevent automatic downgrading on eclipse import which causes some wb-resources to be dropped
		// (original value is '2.0')
		file {
			withXml { xml ->
				def node = xml.asNode()
				node.@'project-version' = '1.5.0'
			}
		}
    }

    facet {
        facet name: 'jst.web', version: '3.1'
        facet name: 'jst.java', version: '1.8'
    }
}

eclipse.classpath.file {
    // Classpath entry for Eclipse which changes the order of classpathentries; otherwise no sources for 3rd party jars are shown
    withXml { xml ->
        def node = xml.asNode()
        node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
        node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
    }
}

// set utf-8 encoding for eclipse project
eclipseJdt << {
    File f = file('.settings/org.eclipse.core.resources.prefs')
    f.write('eclipse.preferences.version=1\n')
    f.append('encoding/<project>=utf-8')
}

cleanEclipse << {
    File f = file('.settings/org.eclipse.core.resources.prefs')
    f.delete()
}

dockerCompose {
	useComposeFiles = ['docker/docker-compose.yml']
}


task copyToDocker(type: Copy) {
    from war.archivePath
    into "docker/web/"
    rename '(.*).war', 'application.war'
}

copyToDocker.dependsOn war

composeUp.dependsOn copyToDocker

afterEvaluate {
    tasks.eclipseClasspath.dependsOn tasks.jaxb
}
